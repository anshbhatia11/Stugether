{"ast":null,"code":"var _jsxFileName = \"D:\\\\chat\\\\src\\\\pages\\\\Chat\\\\Chat.jsx\",\n    _s = $RefreshSig$();\n\nimport { InfoOutlined, StarBorderOutlined } from \"@material-ui/icons\";\nimport React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport ChatInput from \"../../components/ChatInput/ChatInput\";\nimport Message from \"../../components/Message/Message\";\nimport db from \"../../firebase\";\nimport Layout from \"../../Layout/Layout\";\nimport \"./Chat.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chat() {\n  _s();\n\n  const {\n    channelId\n  } = useParams();\n  const [channelDetails, setChannelDetails] = useState(null);\n  const [channelMessages, setChannelMessages] = useState([]);\n  useEffect(() => {\n    if (channelId) {\n      db.collection(\"channels\").doc(channelId).onSnapshot(snapshot => {\n        setChannelDetails(snapshot.data());\n      });\n    }\n\n    db.collection(\"channels\").doc(channelId).collection(\"messages\").orderBy(\"timestamp\", \"asc\").onSnapshot(snapshot => {\n      setChannelMessages(snapshot.docs.map(doc => doc.data()));\n    });\n  }, [channelId]);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat__header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat__headerLeft\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"chat__channelName\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [\"#\", channelDetails === null || channelDetails === void 0 ? void 0 : channelDetails.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StarBorderOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat__headerRight\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(InfoOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this), \" Details\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat__messages\",\n        children: channelMessages.map(({\n          message,\n          user,\n          userImage,\n          timestamp\n        }) => /*#__PURE__*/_jsxDEV(Message, {\n          message: message,\n          timestamp: timestamp,\n          user: user,\n          userImage: userImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat__input\",\n        children: /*#__PURE__*/_jsxDEV(ChatInput, {\n          channelName: channelDetails === null || channelDetails === void 0 ? void 0 : channelDetails.name,\n          channelId: channelId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chat, \"df3bx5/Vu8bllmbAaaruwwlcAaE=\", false, function () {\n  return [useParams];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["D:/chat/src/pages/Chat/Chat.jsx"],"names":["InfoOutlined","StarBorderOutlined","React","useState","useEffect","useParams","ChatInput","Message","db","Layout","Chat","channelId","channelDetails","setChannelDetails","channelMessages","setChannelMessages","collection","doc","onSnapshot","snapshot","data","orderBy","docs","map","name","message","user","userImage","timestamp"],"mappings":"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","sourcesContent":["import { InfoOutlined, StarBorderOutlined } from \"@material-ui/icons\";\nimport React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport ChatInput from \"../../components/ChatInput/ChatInput\";\nimport Message from \"../../components/Message/Message\";\nimport db from \"../../firebase\";\nimport Layout from \"../../Layout/Layout\";\nimport \"./Chat.css\";\nfunction Chat() {\n  const { channelId } = useParams();\n  const [channelDetails, setChannelDetails] = useState(null);\n  const [channelMessages, setChannelMessages] = useState([]);\n  useEffect(() => {\n    if (channelId) {\n      db.collection(\"channels\")\n        .doc(channelId)\n        .onSnapshot((snapshot) => {\n          setChannelDetails(snapshot.data());\n        });\n    }\n    db.collection(\"channels\")\n      .doc(channelId)\n      .collection(\"messages\")\n      .orderBy(\"timestamp\", \"asc\")\n      .onSnapshot((snapshot) => {\n        setChannelMessages(snapshot.docs.map((doc) => doc.data()));\n      });\n  }, [channelId]);\n\n  return (\n    <Layout>\n      <div className=\"chat\">\n        <div className=\"chat__header\">\n          <div className=\"chat__headerLeft\">\n            <h4 className=\"chat__channelName\">\n              <strong>#{channelDetails?.name}</strong>\n              <StarBorderOutlined />\n            </h4>\n          </div>\n          <div className=\"chat__headerRight\">\n            <p>\n              <InfoOutlined /> Details\n            </p>\n          </div>\n        </div>\n        <div className=\"chat__messages\">\n          {channelMessages.map(({ message, user, userImage, timestamp }) => (\n            <Message\n              message={message}\n              timestamp={timestamp}\n              user={user}\n              userImage={userImage}\n            />\n          ))}\n        </div>\n        <div className=\"chat__input\">\n          <ChatInput channelName={channelDetails?.name} channelId={channelId} />\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}